@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">MyDNA.GraphQLClients.BlazorWAS.ThuNTN</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
           <NavLink class="nav-link" href="/TestResultsThuNtnList">New Test Result</NavLink>
        </div>
        @if (isLoggedIn)
        {
            <div class="nav-item px-3 mt-3">
                <button class="btn btn-danger w-100" @onclick="Logout">
                    <span class="bi bi-box-arrow-right" aria-hidden="true"></span> Đăng xuất
                </button>
            </div>
        }


    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private async Task Logout()
    {
        // Xoá cookie authToken
        await JS.InvokeVoidAsync("eval", "document.cookie = 'authToken=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;'");

        // Chuyển về trang login
        Navigation.NavigateTo("/login", forceLoad: true);
    }
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        var token = await JS.InvokeAsync<string>("eval", "document.cookie");
        isLoggedIn = token.Contains("authToken=");
    }


}
